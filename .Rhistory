fill= "#fed976", alpha = 0.8) + # 3 tier system
annotate("text", x = as.Date("2020-05-13"), y = 450, label = "National lockdown",size = 5, angle = 90) +
annotate("text", x = as.Date("2020-11-24"), y = 450, label = "3 Tier lockdown",size = 5, angle = 90) +
geom_point(aes(colour = weekend_flag), size = 1, alpha = 0.5) +
geom_smooth(method = "loess", span = 0.15) +
scale_color_SU(palette = "main") +
labs(title = "Inpatient activity: Hip replacement procedures",
subtitle = "National, planned care",
colour = "",
x = "Date",
y = "Admissions")
# Outpatient
b_hip_opa_daily_vis <-
b_hip_opa_daily %>%
filter(Appointment_Date > "2018-01-01" &
Appointment_Date < "2020-12-31") %>%
mutate(week_day = weekdays(Appointment_Date)) %>%
mutate(weekend_flag = case_when(substr(week_day,1,1) == "S" ~ "Weekend",
TRUE ~ "Week day")) %>%
ggplot(aes(x = Appointment_Date, y = n_appointments)) +
annotate("rect", xmin = as.Date("2020-03-23"), xmax = as.Date("2020-07-04"), ymin = 0, ymax = Inf,
fill= "#fed976", alpha = 0.8) + # Lockdown 1
annotate("rect", xmin = as.Date("2020-10-14"), xmax = as.Date("2021-01-04"), ymin = 0, ymax = Inf,
fill= "#fed976", alpha = 0.8) + # 3 tier system
annotate("text", x = as.Date("2020-05-13"), y = 420, label = "National lockdown",size = 5, angle = 90) +
annotate("text", x = as.Date("2020-11-24"), y = 420, label = "3 Tier lockdown",size = 5, angle = 90) +
geom_point(aes(colour = weekend_flag), size = 1, alpha = 0.5) +
geom_smooth(method = "loess", span = 0.15) +
scale_color_SU(palette = "main") +
labs(title = "Outpatient activity: Hip replacement procedures and diagnoses",
subtitle = "National, pre- and post- operative care",
colour = "",
x = "Date",
y = "Appointments")
# ED
b_hip_ed_daily_vis <-
b_hip_ed_daily %>%
filter(Arrival_Date > "2018-01-01" &
Arrival_Date < "2020-12-31") %>%
mutate(week_day = weekdays(Arrival_Date)) %>%
mutate(weekend_flag = case_when(substr(week_day,1,1) == "S" ~ "Weekend",
TRUE ~ "Week day")) %>%
ggplot(aes(x = Arrival_Date, y = n_attendances)) +
annotate("rect", xmin = as.Date("2020-03-23"), xmax = as.Date("2020-07-04"), ymin = 0, ymax = Inf,
fill= "#fd8d3c", alpha = 0.8) + # Lockdown 1
annotate("rect", xmin = as.Date("2020-10-14"), xmax = as.Date("2021-01-04"), ymin = 0, ymax = Inf,
fill= "#fed976", alpha = 0.8) + # 3 tier system
annotate("text", x = as.Date("2020-05-13"), y = 100, label = "National lockdown",size = 5, angle = 90) +
annotate("text", x = as.Date("2020-11-24"), y = 100, label = "3 Tier lockdown",size = 5, angle = 90) +
geom_point(aes(colour = weekend_flag), size = 1, alpha = 0.5) +
geom_smooth(method = "loess", span = 0.15) +
scale_color_SU(palette = "main") +
labs(title = "Emergency activity: Hip replacement attendances",
subtitle = "National, hip-related injuries and emergencies",
colour = "",
x = "Date",
y = "Attendances")
## B.2. Interactive graphs ####
# Time series
# https://rstudio.github.io/dygraphs/gallery-series-options.html
b_hip_all_daily_grouped <-
b_hip_all_daily %>%
ungroup() %>%
filter(Date > "2018-01-01" &
Date < "2020-12-31") %>%
drop_na(Count) %>%
group_by(Date) %>%
summarise(sum = sum(Count)) %>%
mutate(Admission_week = floor_date(as.Date(Date), unit = "week")) %>%
ungroup() %>%
group_by(Admission_week) %>%
summarise(Activity = sum(sum))
# Dygraph
dygraph(xts(x = b_hip_ip_daily$n_admissions,
order.by = b_hip_ip_daily$Admission_Date),
main = "<b>Inpatient hip replacement admissions<b> <br>
<small> <i>Daily count, England 2018-20<i></small>",
xlab = "Date", ylab = "Admissions"
) %>%
dyOptions(labelsUTC = TRUE,
fillGraph=TRUE,
drawGrid = FALSE,
colors="#f9bf07") %>%
dyRangeSelector() %>%
dyCrosshair(direction = "both") %>%
dyHighlight(highlightCircleSize = 10,
highlightSeriesBackgroundAlpha = 1,
hideOnMouseOut = FALSE)
# Try and plot multiple trends alongside each other
b_hip_all_month_wide <-
b_hip_all_month %>%
pivot_wider(id_cols = Month, names_from = Activity, values_from = Count) %>% clean_names()
ip <- xts(b_hip_all_month_wide$inpatient, order.by = b_hip_all_month_wide$month)
opa <- xts(b_hip_all_month_wide$outpatient, order.by = b_hip_all_month_wide$month)
ed <- xts(b_hip_all_month_wide$emergency_care, order.by = b_hip_all_month_wide$month)
hip_all <-
cbind(ip, opa, ed)
interactive_dygraph_all_hip_activity <-
dygraph(hip_all,
main = "Hip replacement activity by care setting, England 2018-20",
xlab = "Date",
ylab = "Monthly activity count") %>%
dyOptions(drawGrid = FALSE,
colors = c("#f9bf07", "#5881c1", "#ec6555"),
strokeWidth = 5) %>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 1,
hideOnMouseOut = FALSE) %>%
dyShading(from = "2020-03-23", to = "2020-07-04", color = "#d9d9d9") %>%
dyShading(from = "2020-10-1", to = "2021-01-04", color = "#d9d9d9") %>%
dyAnnotation("2020-05-13", text = "National Lockdown") %>%
dyAnnotation("2020-11-24", text = "3 Tier lockdown")
## C. Cohort characteristics ####
## C.1. Age ####
c_ip_hip_age <-
a.ip_hip %>%
group_by(Admission_Date, Age_range) %>%
summarise(Admissions = n_distinct(APCS_Ident)) %>%
mutate(daily_sum = sum(Admissions)) %>%
mutate(prop = Admissions/daily_sum*100) %>%
mutate(prop = round(prop, 2)) %>%
ungroup()
c_ip_hip_age_vis <-
c_ip_hip_age %>%
filter(Age_range %in% c("60-79", "80-99")) %>%
mutate(Admission_Date = as.Date(Admission_Date)) %>%
ggplot(aes(x = Admission_Date, y = prop, group = Age_range)) +
annotate("rect", xmin = as.Date("2020-03-23"), xmax = as.Date("2020-07-04"), ymin = 0, ymax = 100,
fill= "#fed976", alpha = 0.8) + # Lockdown 1
annotate("rect", xmin = as.Date("2020-10-14"), xmax = as.Date("2021-01-04"), ymin = 0, ymax = 100,
fill= "#fed976", alpha = 0.8) + # 3 tier system
#annotate("text", x = as.Date("2020-05-13"), y = 95, label = "National lockdown",size = 3, angle = 90) +
#annotate("text", x = as.Date("2020-11-24"), y = 85, label = "3 Tier lockdown",size = 3, angle = 90) +
geom_point(aes(colour = Age_range), alpha = 0.5) +
geom_smooth(method = "loess", span = 0.15) +
scale_color_SU(palette = "main") +
labs(title = "Daily proportion of hip procedures performed by age range",
subtitle = "National, elective inpatient episodes",
x = "Date",
y = "Proportion admissions",
colour = "")
# markdown chunk
ggplotly(
c_ip_hip_age_vis +
annotate("text", x = as.Date("2020-05-13"), y = 95, label = "National lockdown",size = 3, angle = 90) +
annotate("text", x = as.Date("2020-11-24"), y = 85, label = "3 Tier lockdown",size = 3, angle = 90),
tooltip = c("Admission_Date","prop")) %>%
layout(legend = list(y = 0.5),
title = list(text = paste0('<b>Daily proportion of hip procedures performed by age range<b>',
'<br>',
'<sup>',
'<i>National, elective inpatient episodes<i>',
'</sup>')))
# Stacked bar chart
c_ip_hip_age_stacked_data <-
c_ip_hip_age %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week, Age_range) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Proportion = round(prop, digits = 2)) %>%
drop_na(Proportion)
c_ip_hip_age_stacked_vis <-
c_ip_hip_age_stacked_data %>%
ggplot(aes(x = Admission_week, y = Proportion, fill = Age_range)) +
geom_bar(position = "stack", stat = "identity", width = 7) +
scale_fill_brewer(palette = "Spectral", limits=c("0-19", "20-39", "40-59", "60-79", "80-99", "100+")) +
labs(title = "Proportion of elective hip procedures by age range",
x = "Admission week",
y = "Proportion",
fill = "")
# Admissions in all ages as reference
c_ip_hip_admission_volume <-
a.ip_hip %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week) %>%
summarise(Admission_count = n()) %>%
mutate(ID = "Inpatient")
c_ip_hip_admission_volume_vis <-
c_ip_hip_admission_volume %>%
ggplot(aes(x = Admission_week, y = Admission_count, colour = ID)) +
geom_area(fill="#f9bf07", alpha=0.5) +
geom_line(color="#f9bf07", size = 0.91) +
geom_vline(xintercept = as.Date("2020-03-23"), linetype = "dashed") +
geom_vline(xintercept = as.Date("2020-07-04"), linetype = "dashed") +
annotate("text", x = as.Date("2020-05-13"), y = 2500, label = str_wrap("National lockdown", 10) ,size = 3) +
geom_vline(xintercept = as.Date("2020-10-14"), linetype = "dashed") +
geom_vline(xintercept = as.Date("2021-01-04"), linetype = "dashed") +
annotate("text", x = as.Date("2020-11-24"), y = 2500, label = str_wrap("3 Tier lockdown", 10) ,size = 3) +
annotate("text", x = as.Date("2020-08-24"), y = 2500, label = str_wrap("Recovery period", 10) ,size = 3) +
labs(x = "Admission week", y = "Count", colour = "",
title = "Count of weekly admissions for elective hip procedures")
# Bar and line chart - flat
(c_ip_hip_age_stacked_vis +
geom_vline(xintercept = 18344, linetype = "dashed") +
geom_vline(xintercept = 18447, linetype = "dashed") +
geom_vline(xintercept = 18549, linetype = "dashed") +
geom_vline(xintercept = 18631, linetype = "dashed")) /
(c_ip_hip_admission_volume_vis
) +
plot_layout(heights = c(5,1))
# Combine interactive stacked bar and line graph
c_ip_hip_stack_and_line <-
subplot(
# Stacked bar
ggplotly(c_ip_hip_age_stacked_vis +
annotate("segment", x = as.Date("2020-03-23"), xend = as.Date("2020-03-23"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2020-07-04"), xend = as.Date("2020-07-04"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2020-10-14"), xend = as.Date("2020-10-14"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2021-01-04"), xend = as.Date("2021-01-04"), y = 0, yend = 100, lty = 2),
tooltip = c("Age_range", "Proportion")
),
# Line chart
style(
ggplotly(c_ip_hip_admission_volume_vis +
annotate("segment", x = as.Date("2021-01-04"), xend = as.Date("2021-01-04"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-03-23"), xend = as.Date("2020-03-23"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-07-04"), xend = as.Date("2020-07-04"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-10-14"), xend = as.Date("2020-10-14"), y = 0, yend = 2800, lty = 2),
tooltip = c("Admission_week", "Admission_count")),
showlegend = FALSE
),
# Organise plots
nrows = 2, heights = c(0.8,0.2), shareY = TRUE, shareX = TRUE
) %>%
layout(legend = list(y = 0.5),
title = list(text = paste0('<b> At the height of disruption, care was limited to the older patients despited increased covid risk <b>',
'<br>',
'<sup>',
'<i>Proportion and count of elective hip procedures by age range: National, weekly average<i>',
'</sup>')))
# 2018 average
c_ip_hip_age_2018_avg <-
c_ip_hip_age %>%
filter(Admission_Date > "2018-01-01" &
Admission_Date < "2018-12-31") %>%
drop_na(Age_range) %>%
group_by(Age_range) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Proportion = round(prop, digits = 3)) %>%
mutate(Date = "2018-01-01") %>%
mutate(Date = as.Date(Date)) %>%
ggplot(aes(x = Date, y = Proportion, fill = Age_range)) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral", limits=c("0-19", "20-39", "40-59", "60-79", "80-99", "100+")) +
theme(axis.text.x = element_blank(),
legend.position = "none") +
labs(x = "2018",
y = "Proportion")
# 2019 average
c_ip_hip_age_2019_avg <-
c_ip_hip_age %>%
filter(Admission_Date > "2019-01-01" &
Admission_Date < "2019-12-31") %>%
drop_na(Age_range) %>%
group_by(Age_range) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Proportion = round(prop, digits = 3)) %>%
mutate(Date = "2019-01-01") %>%
mutate(Date = as.Date(Date)) %>%
ggplot(aes(x = Date, y = Proportion, fill = Age_range)) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral", limits=c("0-19", "20-39", "40-59", "60-79", "80-99", "100+")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.position = "none") +
labs(x = "2019",
y = "")
# Weekly average
c_ip_hip_age_2020_wk <-
c_ip_hip_age %>%
filter(Admission_Date > "2020-01-01" &
Admission_Date < "2020-12-31") %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week, Age_range) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Proportion = round(prop, digits = 3)) %>%
ggplot(aes(x = Admission_week, y = Proportion, fill = Age_range)) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral", limits=c("0-19", "20-39", "40-59", "60-79", "80-99", "100+")) +
theme(axis.text.y = element_blank()) +
labs(x = "Admission week",
y = "",
fill = "Age range")
#Patch together
c_ip_hip_age_2018_avg + c_ip_hip_age_2019_avg + c_ip_hip_age_2020_wk +
plot_layout(ncol = 3, widths = c(1,1,4)) +
plot_annotation(title = "Proportion of elective hip procedures by age range",
subtitle = "National, 2018 and 2019 annual averages compared to 2020 weekly averages")
# Stream graph
c_ip_hip_age_stacked_vis %>%
ggplotly(tooltip = c("Age_range", "Proportion")) %>%
layout(legend = list(y = 0.5),
title = list(text = paste0('<b>Proportion of elective hip procedures by age range<b>',
'<br>',
'<sup>',
'<i>National, weekly average<i>',
'</sup>')))
## C.2. Deprivation ####
con_ref <- dbConnect(odbc(),
Driver = "SQL Server",
server = "PRODNHSESQL101",
Database = "NHSE_Reference")
c_lsoa_imd <- tbl(con_ref, "tbl_Ref_Other_Deprivation_By_LSOA") %>%
collect()
# Disconnect! #
dbDisconnect(con_ref)
c_ip_hip_imd <-
a.ip_hip  %>%
select(1:9, procedure_type, Age_range) %>%
left_join(select(c_lsoa_imd, LSOA_Code, IMD_Score, IMD_Rank, IMD_Decile), by = c("Der_Postcode_LSOA_2011_Code" = "LSOA_Code")) %>%
mutate(IMD_Quintile = case_when(IMD_Decile %in% c(1,2) ~ 1,
IMD_Decile %in% c(3,4) ~ 2,
IMD_Decile %in% c(5,6) ~ 3,
IMD_Decile %in% c(7,8) ~ 4,
IMD_Decile %in% c(9,10) ~ 5,
TRUE ~ 99)) %>%
group_by(Admission_Date, IMD_Quintile) %>%
summarise(Admissions = n_distinct(APCS_Ident)) %>%
mutate(daily_sum = sum(Admissions)) %>%
mutate(prop = Admissions/daily_sum*100) %>%
mutate(prop = round(prop, 2))
c_ip_hip_imd_wk <-
c_ip_hip_imd %>%
ungroup() %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week, IMD_Quintile) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(IMD_Quintile = as.character(IMD_Quintile))
c.ip_hip_imd_vis <-
c_ip_hip_imd_wk %>%
ggplot(aes(x = Admission_week, y = prop, group = IMD_Quintile, colour = IMD_Quintile  )) +
annotate("rect", xmin = as.Date("2020-03-23"), xmax = as.Date("2020-07-04"), ymin = 0, ymax = 40,
fill= "#fed976", alpha = 0.8) + # Lockdown 1
annotate("rect", xmin = as.Date("2020-10-14"), xmax = as.Date("2021-01-04"), ymin = 0, ymax = 40,
fill= "#fed976", alpha = 0.8) + # 3 tier system
annotate("text", x = as.Date("2020-05-13"), y = 37, label = "National lockdown",size = 3, angle = 90) +
annotate("text", x = as.Date("2020-11-24"), y = 34, label = "3 Tier lockdown",size = 3, angle = 90) +
geom_point( alpha = 0.75) +
geom_smooth(method = "loess", span = 0.2) +
scale_colour_brewer(palette = "Spectral") +
ylim(0,40) +
labs(title = "During the initial lockown, hip care was focused on the very rich and very poor",
subtitle = "Weekly proportion of hip procedures performed by IMD deprivation quintile: National, elective inpatient episodes",
x = "Admission week",
y = "Proportion admissions",
caption = "Note: IMD quintile 1 represents the poorest 20% of the population",
colour = "")
# Markdown chunk
ggplotly(c.ip_hip_imd_vis,
tooltip = c("Admission_week","prop")) %>%
layout(legend = list(y = 0.5),
title = list(text = paste0(
'<b>During the initial lockown, hip care was focused on the very rich and very poor<b>',
'<br>',
'<sup>',
'<i>Weekly proportion of hip procedures performed by IMD deprivation quintile: National, elective inpatient episodes<i>',
'</sup>')))
# Total stacked bar
c_ip_hip_imd_stack_vis <-
c_ip_hip_imd %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week, IMD_Quintile) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Proportion = round(prop, digits = 2)) %>%
drop_na(Proportion) %>%
ggplot(aes(x = Admission_week, y = Proportion, fill = as.character(IMD_Quintile))) +
geom_bar(position = "stack", stat = "identity", width = 7) +
scale_fill_brewer(palette = "Spectral") +
labs(title = "Proportion of elective hip procedures by IMD Quintile",
subtitle = "National, weekly average",
x = "Admission week",
y = "Proportion",
fill = "")
# Stacked bar and line graph
c_hip_ip_stacked_bar_and_line <-
subplot(
# Stacked bar
ggplotly(c_ip_hip_imd_stack_vis +
annotate("segment", x = as.Date("2020-03-23"), xend = as.Date("2020-03-23"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2020-07-04"), xend = as.Date("2020-07-04"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2020-10-14"), xend = as.Date("2020-10-14"), y = 0, yend = 100, lty = 2) +
annotate("segment", x = as.Date("2021-01-04"), xend = as.Date("2021-01-04"), y = 0, yend = 100, lty = 2),
tooltip = c("Admission_week","Proportion")
),
# Line chart
style(
ggplotly(c_ip_hip_admission_volume +
annotate("segment", x = as.Date("2021-01-04"), xend = as.Date("2021-01-04"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-03-23"), xend = as.Date("2020-03-23"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-07-04"), xend = as.Date("2020-07-04"), y = 0, yend = 2800, lty = 2) +
annotate("segment", x = as.Date("2020-10-14"), xend = as.Date("2020-10-14"), y = 0, yend = 2800, lty = 2),
tooltip = c("Admission_week", "Admission_count")),
showlegend = FALSE
),
# Organise plots
nrows = 2, heights = c(0.8,0.2), shareY = TRUE, shareX = TRUE
) %>%
layout(legend = list(y = 0.5),
title = list(text = paste0('<b>Richer people received a greater than average proportion of hip care during lockdown<b>',
'<br>',
'<sup>',
'<i>Proportion and count of elective hip procedures by deprivation quintile: National, weekly average<i>',
'</sup>')))
# Stacked bar chart
# 2018 average
c_ip_hip_imd_2018 <-
c_ip_hip_imd %>%
filter(Admission_Date > "2018-01-01" &
Admission_Date < "2018-12-31") %>%
drop_na(IMD_Quintile) %>%
group_by(IMD_Quintile) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Date = "2018-01-01") %>%
ggplot(aes(x = as.Date(Date), y = prop, fill = as.character(IMD_Quintile))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_blank(),
legend.position = "none") +
labs(x = "2018",
y = "Proportion")
# 2019 average
c_ip_hip_imd_2019 <-
c_ip_hip_imd %>%
filter(Admission_Date > "2019-01-01" &
Admission_Date < "2019-12-31") %>%
drop_na(IMD_Quintile) %>%
group_by(IMD_Quintile) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
mutate(Date = "2019-01-01") %>%
ggplot(aes(x = as.Date(Date), y = prop, fill = as.character(IMD_Quintile))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text = element_blank(),
legend.position = "none") +
labs(x = "2019",
y = "")
# Weekly average
c_ip_hip_IMD_2020_wk <-
c_ip_hip_imd %>%
filter(Admission_Date > "2020-01-01" &
Admission_Date < "2020-12-31") %>%
mutate(Admission_week = floor_date(as.Date(Admission_Date), unit = "week")) %>%
group_by(Admission_week, IMD_Quintile) %>%
summarise(sum = sum(Admissions)) %>%
mutate(prop = sum/sum(sum)*100) %>%
ggplot(aes(x = as.Date(Admission_week), y = prop, fill = as.character(IMD_Quintile))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.y = element_blank()) +
labs(x = "Admission week",
y = "",
fill = "IMD Quintile")
# Patch together
c_ip_hip_imd_2018 + c_ip_hip_imd_2019 + c_ip_hip_IMD_2020_wk +
plot_layout(ncol = 3, widths = c(1,1,4)) +
plot_annotation(title = "Proportion of elective hip procedures by deprivation quintile",
subtitle = "National, 2018 and 2019 annual averages compared to 2020 weekly averages")
# Stream graph
streamgraph(c_ip_hip_imd_wk %>%
filter(Admission_Date > "2020-01-01" &
Admission_Date < "2020-12-31") ,
key="IMD_Quintile",
value="Admissions",
date="Admission_Date" #, height="300px", width="1000px"
)
c_ip_hip_imd_wk
streamgraph(c_ip_hip_imd_wk %>%
filter(Admission_Date > "2020-01-01" &
Admission_Date < "2020-12-31") ,
key="IMD_Quintile",
value="Admissions",
date="Admission_Date" #, height="300px", width="1000px"
)
c_ip_hip_imd_wk
# Stream graph
streamgraph(c_ip_hip_imd_wk %>%
filter(Admission_week > "2020-01-01" &
Admission_week < "2020-12-31") ,
key="IMD_Quintile",
value="Admissions",
date="Admission_week" #, height="300px", width="1000px"
)
c_ip_hip_imd_wk
c_ip_hip_imd_wk %>%
filter(Admission_week > "2020-01-01" &
Admission_week < "2020-12-31")
streamgraph(c_ip_hip_imd_wk %>%
filter(Admission_week > "2020-01-01" &
Admission_week < "2020-12-31") %>%
ungroup(),
key="IMD_Quintile",
value="Admissions",
date="Admission_week" #, height="300px", width="1000px"
)
streamgraph(c_ip_hip_imd_wk %>%
filter(Admission_week > "2020-01-01" &
Admission_week < "2020-12-31") %>%
ungroup(),
key="IMD_Quintile",
value="prop",
date="Admission_week" #, height="300px", width="1000px"
)
c_ip_hip_imd_stack_vis
